spring.application.name=nistagram-search

spring.datasource.username=${DATABASE_USERNAME:root}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.datasource.url=jdbc:postgresql://${DATABASE_DOMAIN:database}:${DATABASE_PORT:5432}/${DATABASE_SCHEMA:search}
spring.datasource.platform=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.kafka.consumer.bootstrap-servers=${KAFKA_DOMAIN:localhost}:${KAFKA_PORT:9092}
spring.kafka.consumer.group-id=my_group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.bootstrap-servers=${KAFKA_DOMAIN:localhost}:${KAFKA_PORT:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
